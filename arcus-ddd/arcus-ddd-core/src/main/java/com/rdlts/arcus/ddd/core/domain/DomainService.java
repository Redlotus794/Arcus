package com.rdlts.arcus.ddd.core.domain;

/**
 * DomainService
 *  <p>
 *  领域服务是指那些包含领域逻辑但不自然属于任何实体或值对象的操作的集合。
 *  </p>
 *
 *  <h3>领域服务的特点</h3>
 *  <ul>
 *      <li>独立的逻辑单元：领域服务通常表示独立的逻辑单元，执行特定的业务操作，这些操作跨越多个实体或领域对象。</li>
 *      <li>状态无关：与实体不同，领域服务通常不持有状态。它们通过接收实体或值对象作为参数来执行业务逻辑。</li>
 *      <li>操作聚合：领域服务可以聚合来自多个实体或值对象的操作，以实现更复杂的业务过程。</li>
 *  </ul>
 *
 *  <h3>领域服务的使用场景</h3>
 *  领域服务用于执行不自然属于任何单个实体或值对象的业务逻辑。 <br>
 *  例如，在一个电商系统中，计算订单总价可能涉及多个实体（如订单项、折扣策略、税率等），这种跨实体的操作就可以由领域服务来处理。
 *
 *  <h3>实现领域服务的准则</h3>
 *  <ul>
 *      <li>定义明确的接口：领域服务应该有一个清晰定义的接口，明确指出它能提供哪些操作。</li>
 *      <li>专注业务逻辑：领域服务应该只包含与业务逻辑相关的代码，不应涉及数据访问逻辑或呈现逻辑。</li>
 *      <li>与实体和值对象协作：虽然领域服务不应拥有状态，但它们通常操作实体和值对象来完成业务逻辑。</li>
 *      <li>保持粒度平衡：领域服务应该保持适当的粒度，既不应过于庞大，以致于难以管理，也不应过于细碎，以致于难以理解整体业务流程。</li>
 *  </ul>
 *
 * @author wangjialong
 * @since 2025-06-26
 */
public interface DomainService {

}
